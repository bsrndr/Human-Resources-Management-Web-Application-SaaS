@using Presentation.Models.VMs.Login;
@model ConformationNumberVM
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <title>Human Resources</title>
    <link rel="shortcut icon" href="~/images/mini-logo-human.png" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.0/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
    <style type="text/css">
        * {
            margin: 0px;
            padding: 0px;
        }

        .login {
            background: linear-gradient(to bottom, #0099ff 0%, #fff 100%);
            height: 100vh;
            width: 100%;
            justify-content: center;
            align-items: center;
            display: flex;
        }

        .account-login {
            width: 500px;
        }

        .form-control:focus {
            box-shadow: none;
        }

        p a {
            padding-left: 2px;
        }

        .account-login h1 {
            font-size: 25px;
            text-align: left;
            color: #fff;
            text-transform: uppercase;
            font-weight: bold;
            border-radius: 5px;
        }

        .login-form input {
            width: 100%;
            position: relative;
            border-bottom: 1px solid #a39e9e;
            padding: 0;
            border-top: 0px;
            border-left: 0px;
            border-right: 0px;
            box-shadow: none;
            height: 63px;
            border-radius: 0px;
        }

        .login-form {
            background: #fff;
            float: left;
            width: 100%;
            padding: 40px;
            border-radius: 5px;
        }

        button.btn {
            width: 100%;
            background: #009cff;
            font-size: 20px;
            padding: 11px;
            color: #fff;
            border: 0px;
            margin: 10px 0px 20px;
        }

        .btn:hover {
            color: #fff;
            opacity: 0.8;
        }

        p {
            float: left;
            width: 100%;
            text-align: center;
            font-size: 14px;
        }

        .remember {
            float: left;
            width: 100%;
            margin: 10px 0 0;
        }
        /* Customize the label (the container) */
        .custom-checkbox {
            display: block;
            position: relative;
            padding-left: 27px;
            margin-bottom: 12px;
            cursor: pointer;
            font-size: 13px;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
            font-weight: normal;
            padding-top: 2px;
            float: left;
        }
            /* Hide the browser's default checkbox */
            .custom-checkbox input {
                position: absolute;
                opacity: 0;
                cursor: pointer;
                height: 0;
                width: 0;
            }
            /* Create a custom checkbox */
            .custom-checkbox .checkmark {
                position: absolute;
                top: 0;
                left: 0;
                height: 20px;
                width: 20px;
                background-color: #bfbcbc;
            }
            /* On mouse-over, add a grey background color */
            .custom-checkbox:hover input ~ .checkmark {
                background-color: #747474;
            }
            /* When the checkbox is checked, add a blue background */
            .custom-checkbox input:checked ~ .checkmark {
                background-color: #2196F3;
            }
        /* Create the checkmark/indicator (hidden when not checked) */
        .checkmark:after {
            content: "";
            position: absolute;
            display: none;
        }
        /* Show the checkmark when checked */
        .custom-checkbox input:checked ~ .checkmark:after {
            display: block;
        }
        /* Style the checkmark/indicator */
        .custom-checkbox .checkmark:after {
            left: 9px;
            top: 5px;
            width: 5px;
            height: 10px;
            border: solid white;
            border-width: 0 3px 3px 0;
            -webkit-transform: rotate(45deg);
            -ms-transform: rotate(45deg);
            transform: rotate(45deg);
        }
    </style>
</head>
<body>
    <div class="login">
        <div class="account-login">
            <div>
                <h1 style="text-align:center">Create Password</h1>
            </div>
            <form class="login-form" method="post" asp-controller="login" asp-action="ResetPasswordPost">
                <div class="form-group">
                    <input type="text" asp-for="ConformationNumber" class="form-control" placeholder="Confirmation Number" value="" id="ConformationNumber" />
                </div>

                <div class="form-group first">
                    <div class="input-group">
                        <input type="password" asp-for="Password" placeholder="New Password" class="form-control input-group passwordd" id="NewPassword" />
                        <span class="input-group-addon show-hide-password" style="border: none; background-color: transparent;">
                            <i class="far fa-eye" style="color: #858585;"></i>
                        </span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="input-group">
                        <input type="password" class="form-control passwordd" placeholder="Confirm Password" id="ConfirmPassword" />  
                            <span class="input-group-addon show-hide-password" style="border: none; background-color: transparent;">
                                <i class="far fa-eye" style="color: #858585;"></i>
                            </span>
                    </div>
                </div>
                <div>
                    <input type="hidden" asp-for="Id" value="@Model.Id" />
                </div>
                <div>
                    @*@if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
                    }*@
                    @if (TempData["error"] != null)
                    {
                        <div class="alert alert-danger">@TempData["error"]</div>
                    }

                </div>
                <span id="passwordMatchError" style="color: red;"></span> <br />
                <button class="btn">Save</button>
            </form>
        </div>
    </div>
</body>
</html>

<script>
    // Confirm Password alanının değiştiğinde kontrol yap
    document.getElementById("ConfirmPassword").addEventListener("keyup", function () {
        var newPassword = document.getElementById("NewPassword").value;
        var confirmPassword = this.value;

        if (newPassword !== confirmPassword) {
            document.getElementById("passwordMatchError").textContent = "Passwords do not match!";
        } else {
            document.getElementById("passwordMatchError").textContent = "";
        }
    });

    // ConformationNumber alanının değiştiğinde kontrol yap
    document.getElementById("ConformationNumber").addEventListener("keyup", function () {
        var inputValue = this.value;
        var numericValue = parseInt(inputValue);

        // Sadece sayıları kabul etmek için kontrol yap
        if (isNaN(numericValue)) {
            this.value = ""; // Sayı değilse, alanı temizle
        }
    });

    document.querySelectorAll('.show-hide-password').forEach(function (button) {
        button.addEventListener('click', function () {
            var passwordInput = this.closest('.form-group').querySelector('.passwordd');
            var icon = this.querySelector('i');

            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                passwordInput.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        });
    });
</script>


